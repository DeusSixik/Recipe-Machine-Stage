buildscript {
    repositories {
        // These repositories are only for Gradle plugins, put any other repositories in the repository block further below
        maven { url = 'https://repo.spongepowered.org/repository/maven-public/' }
        mavenCentral()
    }
    dependencies {
        classpath 'org.spongepowered:mixingradle:0.7-SNAPSHOT'
    }
}

plugins {
    id 'eclipse'
    id 'idea'
    id 'net.minecraftforge.gradle' version '[6.0.16,6.2)'
}

apply plugin: 'org.spongepowered.mixin'

group = mod_group_id
version = mod_version

base {
    archivesName = mod_id
}

java {
    toolchain.languageVersion = JavaLanguageVersion.of(17)
}

minecraft {
    // The mappings can be changed at any time and must be in the following format.
    // Channel:   Version:
    // official   MCVersion             Official field/method names from Mojang mapping files
    // parchment  YYYY.MM.DD-MCVersion  Open community-sourced parameter names and javadocs layered on top of official
    //
    // You must be aware of the Mojang license when using the 'official' or 'parchment' mappings.
    // See more information here: https://github.com/MinecraftForge/MCPConfig/blob/master/Mojang.md
    //
    // Parchment is an unofficial project maintained by ParchmentMC, separate from MinecraftForge
    // Additional setup is needed to use their mappings: https://parchmentmc.org/docs/getting-started
    //
    // Use non-default mappings at your own risk. They may not always work.
    // Simply re-run your setup task after changing the mappings to update your workspace.
    mappings channel: mapping_channel, version: mapping_version

    // When true, this property will have all Eclipse/IntelliJ IDEA run configurations run the "prepareX" task for the given run configuration before launching the game.
    // In most cases, it is not necessary to enable.
    // enableEclipsePrepareRuns = true
    // enableIdeaPrepareRuns = true

    // This property allows configuring Gradle's ProcessResources task(s) to run on IDE output locations before launching the game.
    // It is REQUIRED to be set to true for this template to function.
    // See https://docs.gradle.org/current/dsl/org.gradle.language.jvm.tasks.ProcessResources.html
    copyIdeResources = true

    // When true, this property will add the folder name of all declared run configurations to generated IDE run configurations.
    // The folder name can be set on a run configuration using the "folderName" property.
    // By default, the folder name of a run configuration is the name of the Gradle project containing it.
    // generateRunFolders = true

    // This property enables access transformers for use in development.
    // They will be applied to the Minecraft artifact.
    // The access transformer file can be anywhere in the project.
    // However, it must be at "META-INF/accesstransformer.cfg" in the final mod jar to be loaded by Forge.
    // This default location is a best practice to automatically put the file in the right place in the final jar.
    // See https://docs.minecraftforge.net/en/latest/advanced/accesstransformers/ for more information.
    // accessTransformer = file('src/main/resources/META-INF/accesstransformer.cfg')

    // Default run configurations.
    // These can be tweaked, removed, or duplicated as needed.
    runs {
        // applies to all the run configs below
        configureEach {
            workingDirectory project.file('run')

            // Recommended logging data for a userdev environment
            // The markers can be added/remove as needed separated by commas.
            // "SCAN": For mods scan.
            // "REGISTRIES": For firing of registry events.
            // "REGISTRYDUMP": For getting the contents of all registries.
            property 'forge.logging.markers', 'REGISTRIES'


            // Recommended logging level for the console
            // You can set various levels here.
            // Please read: https://stackoverflow.com/questions/2031163/when-to-use-the-different-log-levels
            property 'forge.logging.console.level', 'debug'

            mods {
                "${mod_id}" {
                    source sourceSets.main
                }
            }
        }

        client {
            // Comma-separated list of namespaces to load gametests from. Empty = all namespaces.
            property 'forge.enabledGameTestNamespaces', mod_id
            property 'mixin.env.remapRefMap', 'true'
            property 'mixin.env.refMapRemappingFile', "${projectDir}/build/createSrgToMcp/output.srg"
        }

        server {
            property 'forge.enabledGameTestNamespaces', mod_id
            args '--nogui'
        }

        // This run config launches GameTestServer and runs all registered gametests, then exits.
        // By default, the server will crash when no gametests are provided.
        // The gametest system is also enabled by default for other run configs under the /test command.
        gameTestServer {
            property 'forge.enabledGameTestNamespaces', mod_id
        }

        data {
            // example of overriding the workingDirectory set in configureEach above
            workingDirectory project.file('run-data')

            // Specify the modid for data generation, where to output the resulting resource, and where to look for existing resources.
            args '--mod', mod_id, '--all', '--output', file('src/generated/resources/'), '--existing', file('src/main/resources/')
        }
    }
}

mixin {
    add sourceSets.main, "${mod_id}.refmap.json"

    config "${mod_id}.mixins.json"
}

// Include resources generated by data generators.
sourceSets.main.resources { srcDir 'src/generated/resources' }

repositories {
    mavenCentral()
    maven {
        url = 'https://maven.blamejared.com'
        name = 'BlameJared Maven'
    }
    maven {
        url "https://dvs1.progwml6.com/files/maven"
    }
    maven {
        url "https://cursemaven.com"
    }

    maven { url 'https://maven.covers1624.net/' }
    maven { url 'https://maven.theillusivec4.top/' }

    maven {
        name = 'GTCEu Maven'
        url = 'https://maven.gtceu.com'
        content {
            includeGroup 'com.gregtechceu.gtceu'
        }
    }
}

dependencies {
    // Specify the version of Minecraft to use.
    // Any artifact can be supplied so long as it has a "userdev" classifier artifact and is a compatible patcher artifact.
    // The "userdev" classifier will be requested and setup by ForgeGradle.
    // If the group id is "net.minecraft" and the artifact id is one of ["client", "server", "joined"],
    // then special handling is done to allow a setup of a vanilla dependency without the use of an external repository.
    minecraft "net.minecraftforge:forge:${minecraft_version}-${forge_version}"

    def ctDep = ("curse.maven:crafttweaker-239197:5648765")

    compileOnly(ctDep)
    runtimeOnly(fg.deobf(ctDep))

    implementation fg.deobf("net.darkhax.gamestages:GameStages-Forge-1.20.1:15.0.1")
    implementation fg.deobf("net.darkhax.bookshelf:Bookshelf-Forge-1.20.1:20.0.2")

    compileOnly(fg.deobf("mezz.jei:jei-1.20.1-common-api:15.20.0.104"))
    compileOnly(fg.deobf("mezz.jei:jei-1.20.1-forge-api:15.20.0.104"))
    implementation(fg.deobf("mezz.jei:jei-1.20.1-forge:15.20.0.104"))

    //Blood Magic
    compileOnly fg.deobf("curse.maven:blood-magic-224791:5290993")

    //Botania
    compileOnly fg.deobf("curse.maven:botania-225643:5594997")
    //Malum
    compileOnly fg.deobf("curse.maven:malum-484064:5718038")
    compileOnly fg.deobf("curse.maven:lodestone-616457:5712854")

    //Irons spellbook
//    implementation fg.deobf("curse.maven:irons-spells-n-spellbooks-855414:5736154")

    //Farmers delight
    compileOnly fg.deobf("curse.maven:farmers-delight-398521:5051242")
    //Create
    implementation fg.deobf("curse.maven:create-328085:5838779")
    compileOnly fg.deobf("curse.maven:create-ore-excavation-649832:5848320")
    implementation fg.deobf("curse.maven:createaddition-439890:5658602")

    //Mekanism
    compileOnly fg.deobf("curse.maven:mekanism-268560:5662583")

    //Natures Aura
    compileOnly fg.deobf("curse.maven:natures-aura-306626:4963590")

    //Evill Craft
    compileOnly fg.deobf("curse.maven:cyclops-core-232758:5583765")
    compileOnly fg.deobf("curse.maven:evilcraft-74610:5707140")

    //Embers
    compileOnly fg.deobf("curse.maven:embers-rekindled-300777:5571196")

    //Ars Nouveau
    compileOnly fg.deobf("curse.maven:ars-nouveau-401955:5600384")

    //Occultism
    compileOnly fg.deobf("curse.maven:occultism-361026:5718612")
    compileOnly fg.deobf("curse.maven:modonomicon-538392:5709369")
    compileOnly fg.deobf("curse.maven:smartbrainlib-661293:5654964")

    //Eidolon
    compileOnly fg.deobf("curse.maven:eidolon-repraised-870250:5587041")

    //Thermal
    compileOnly fg.deobf("curse.maven:thermal-expansion-69163:5372749")
    compileOnly fg.deobf("curse.maven:thermal-foundation-222880:5443583")
    compileOnly fg.deobf("curse.maven:cofh-core-69162:5374122")
    compileOnly fg.deobf("com.teamcofh:thermal_core:${mc_version}-${thermal_core_version}.+")
    //Applied Enegistics
    compileOnly fg.deobf("curse.maven:applied-energistics-2-223794:5641282")

    //Industrial ForeGoing
    compileOnly fg.deobf("curse.maven:industrial-foregoing-266515:5355551")
    compileOnly fg.deobf("curse.maven:titanium-287342:5468426")

    //Powah
    compileOnly fg.deobf("curse.maven:powah-rearchitected-633483:5604170")

    //Ender IO
    compileOnly fg.deobf("curse.maven:ender-io-64578:5858176")

    //Pneunatic Craft
    //implementation fg.deobf("curse.maven:pneumaticcraft-repressurized-281849:5680613")

    //Ad Astra
    //implementation fg.deobf("curse.maven:ad-astra-635042:5914893")
//    implementation fg.deobf("curse.maven:botarium-704113:5486070")
//    implementation fg.deobf("curse.maven:resourceful-config-714059:5020441")
//    implementation fg.deobf("curse.maven:resourceful-lib-570073:5659871")

    //Integrated Dynamics
    //implementation fg.deobf("curse.maven:integrated-dynamics-236307:5919553")
    //implementation fg.deobf("curse.maven:common-capabilities-247007:5650234")
    //implementation fg.deobf("curse.maven:cyclops-core-232758:5583765")

    //Alchemistry
    compileOnly fg.deobf("curse.maven:alchemistry-293425:4770614")
    compileOnly fg.deobf("curse.maven:alchemylib-293426:5037781")
    compileOnly fg.deobf("curse.maven:chemlib-340666:5128632")

    //Extended Crafting
    compileOnly fg.deobf("curse.maven:extended-crafting-268387:5228960")

    //Draconic Evolution
    compileOnly fg.deobf("curse.maven:draconic-evolution-223565:5657010")
    compileOnly fg.deobf("curse.maven:brandons-core-231382:5422013")
    compileOnly fg.deobf("curse.maven:codechicken-lib-1-8-242818:5420418")

    //ProjectE

    //Forbidden and Arcanus

    //Railcraft Reborn

    //Hostile Neural Networks

    //Whisperwoods

    //Mystical Agriculture
    compileOnly fg.deobf("curse.maven:mystical-agriculture-246640:5714744")

    //Railcraft
    compileOnly fg.deobf("curse.maven:railcraft-reborn-901491:5650737")

    //Multiblocked
    compileOnly files('./libs/multiblocked2-1.20.1-1.0.7.d.jar')
    compileOnly fg.deobf("curse.maven:ldlib-626676:5775541")

    //GregTechCEu Modern
   compileOnly fg.deobf("com.gregtechceu.gtceu:gtceu-1.20.1:1.4.6") { transitive = false }
   compileOnly fg.deobf("curse.maven:configuration-444699:4710266")
//    implementation fg.deobf("curse.maven:gregtechceu-modern-890405:5812598")

    implementation fg.deobf("curse.maven:cucumber-272335:5714571")
    compileOnly fg.deobf("curse.maven:architectury-api-419699:5137938")
    compileOnly fg.deobf("curse.maven:cloth-config-348521:5729105")
    compileOnly fg.deobf("curse.maven:curios-309927:5680164")
    implementation fg.deobf("curse.maven:patchouli-306770:4966125")
    compileOnly fg.deobf("curse.maven:geckolib-388172:5675221")

    //Kubejs
    implementation fg.deobf("curse.maven:kubejs-238086:5454840")
    implementation fg.deobf("curse.maven:rhino-416294:5655836")
    implementation fg.deobf("curse.maven:architectury-api-419699:5137938")



    annotationProcessor 'org.spongepowered:mixin:0.8.5:processor'

}

// This block of code expands all declared replace properties in the specified resource targets.
// A missing property will result in an error. Properties are expanded using ${} Groovy notation.
// When "copyIdeResources" is enabled, this will also run before the game launches in IDE environments.
// See https://docs.gradle.org/current/dsl/org.gradle.language.jvm.tasks.ProcessResources.html
tasks.named('processResources', ProcessResources).configure {
    var replaceProperties = [minecraft_version   : minecraft_version, minecraft_version_range: minecraft_version_range,
                             forge_version       : forge_version, forge_version_range: forge_version_range,
                             loader_version_range: loader_version_range,
                             mod_id              : mod_id, mod_name: mod_name, mod_license: mod_license, mod_version: mod_version,
                             mod_authors         : mod_authors, mod_description: mod_description,]

    inputs.properties replaceProperties

    filesMatching(['META-INF/mods.toml', 'pack.mcmeta']) {
        expand replaceProperties + [project: project]
    }
}

// Example for how to get properties into the manifest for reading at runtime.
tasks.named('jar', Jar).configure {
    manifest {
        attributes(["Specification-Title"     : mod_id,
                    "Specification-Vendor"    : mod_authors,
                    "Specification-Version"   : "1", // We are version 1 of ourselves
                    "Implementation-Title"    : project.name,
                    "Implementation-Version"  : project.jar.archiveVersion,
                    "Implementation-Vendor"   : mod_authors,
                    "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")])
    }

    // This is the preferred method to reobfuscate your jar file
    finalizedBy 'reobfJar'
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8' // Use the UTF-8 charset for Java compilation
}
//
//compileJava {
//    options.compilerArgs << "-Acrafttweaker.processor.document.output_directory=${file(mod_id.toLowerCase())}"
//}